name: Build and Release on version Tag

on:
  push:
    tags:
      - 'v*'  # Trigger on tags starting with 'v'

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        arch: [native, rpi-aarch64]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up CMake
        uses: lukka/get-cmake@latest

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y build-essential gcc-aarch64-linux-gnu g++-aarch64-linux-gnu libv4l-dev libusb-1.0-0-dev libudev-dev

      - name: Configure project
        run: |
          if [ "${{ matrix.arch }}" = "native" ]; then
            cmake --preset=default
          elif [ "${{ matrix.arch }}" = "rpi-aarch64" ]; then
            cmake --preset=rpi-aarch64
          fi

      - name: Build and package
        run: |
          if [ "${{ matrix.arch }}" = "native" ]; then
            cmake --build --preset=default --target package
          elif [ "${{ matrix.arch }}" = "rpi-aarch64" ]; then
            cmake --build --preset=rpi-aarch64 --target package
          fi

      - name: Find generated tarball
        id: find-tarball
        run: |
          FILE=$(find ./distrib -name "*.tar.gz" | head -n 1)
          ARCH_SUFFIX=${{ matrix.arch }}
          ARCH_TARBALL="${FILE%.tar.gz}-${ARCH_SUFFIX}.tar.gz"
          mv "$FILE" "$ARCH_TARBALL"
          echo "tarball=$ARCH_TARBALL" >> $GITHUB_OUTPUT

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.arch }}-tarball
          path: ${{ steps.find-tarball.outputs.tarball }}

  release:
    needs: build
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: ./artifacts/**/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
